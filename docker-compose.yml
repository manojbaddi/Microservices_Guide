version: '3.4'

services:
  sqldata:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
        ACCEPT_EULA: "Y"
        SA_PASSWORD: "sa@12345Ok!"
        MSSQL_PID: Developer
    ports:
        - "1433:1433"
  

  webapi:
    image: ${DOCKER_REGISTRY-}webapi
    build:
      context: .
      dockerfile: WebApi/Dockerfile

  redis:
   container_name: redis
   image: redis:alpine
   ports:
     - "6379:6379"
  

  productsservice:
    image: ${DOCKER_REGISTRY-}productsservice
    build:
      context: .
      dockerfile: ProductsService/Dockerfile
    environment:
        DbServer: "sqldata"
        DbPort: "1433"
        DbUser: "SA"
        Password: "sa@12345Ok!"
        Database: "ProductsDB"       
    depends_on:
        - sqldata
 

  cartservice:
    image: ${DOCKER_REGISTRY-}cartservice
    build:
      context: .
      dockerfile: Cart/Dockerfile  

  rabbitmq:
    image: rabbitmq:3-management-alpine

  cartservicemessagebroker:
    image: ${DOCKER_REGISTRY-}cartservicemessagebroker
    build:
      context: .
      dockerfile: CartServiceMessageBroker/Dockerfile    
    depends_on:
      - redis

  webfrontend:
    image: ${DOCKER_REGISTRY-}webfrontend
    build:
      context: .
      dockerfile: WebFrontEnd/Dockerfile

  #sqlcqrs:
  #  image: mcr.microsoft.com/mssql/server:2019-latest
  #  environment:
  #      ACCEPT_EULA: "Y"
  #      SA_PASSWORD: "sa@12345Ok!"
  #      MSSQL_PID: Developer
  #  ports:
  #      - "8080:1433"

  cqrs:
    image: ${DOCKER_REGISTRY-}cqrs
    build:
      context: .
      dockerfile: CQRS/Dockerfile
    environment:
        DbServer: "sqldata"
        DbPort: "1433"
        DbUser: "SA"
        Password: "sa@12345Ok!"
        Database: "Blogs"
    depends_on:
        - sqldata


  basket.api:
    image: ${DOCKER_REGISTRY-}basketapi
    build:
      context: .
      dockerfile: Basket.API/Dockerfile


  consumeapi:
    image: ${DOCKER_REGISTRY-}consumeapi
    build:
      context: .
      dockerfile: ConsumeApi/Dockerfile
    environment:
        DbServer: "sqldata"
        DbPort: "1433"
        DbUser: "SA"
        Password: "sa@12345Ok!"
        Database: "OrdersDB"       
    depends_on:
        - sqldata

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2

  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.2

  samplepublisher:
    image: ${DOCKER_REGISTRY-}samplepublisher
    build:
      context: .
      dockerfile: SamplePublisher/Dockerfile

  sampleconsumer:
    image: ${DOCKER_REGISTRY-}sampleconsumer
    build:
      context: .
      dockerfile: SampleConsumer/Dockerfile

volumes:
  elasticsearch-data:


